{"ast":null,"code":"var _jsxFileName = \"/home/nguyenchicong/Documents/A/happy-team/random-quote-machine/src/App.js\";\nconst words = ['In my dual profession as an educator and health care provider, I have worked with numerous children infected with the virus that causes AIDS. ', 'The relationships that I have had with these special kids have been gifts in my life. They have taught me so many things, but I have especially learned that', 'Tyler was born infected with HIV: his mother was also infected. From the very beginning of his life, he was dependent on medications to enable him to survive. When he was five', 'he had a tube surgically inserted in a vein in his chest. This tube was connected to a pump, which he carried in a small backpack on his back. ', ' continuously supplied through this tube to his bloodstream. At times, he also needed supplemented oxygen to support his breathing.', 'Tyler wasn’t willing to give up one single moment of his childhood to this deadly disease. It was not unusual to find him playing and racing around his backyard,', 'wearing and dragging his tank of oxygen behind him in his little wagon. All of us who knew Tyler marveled at his pure joy in being alive and the energy it gave him.', 'That way, when she peered through the window to check on him playing in the yard, she could quickly spot him.', 'This dreaded disease eventually wore down even the likes of a little dynamo like Tyler. He grew quite ill and, unfortunately', ' When it became apparent that he wasn’t going to survive, Tyler’s mom talked to him about death. She comforted him by telling Tyler that she was dying too,'];\nconst colors = ['red', 'green', 'blue', 'white', 'purple', 'yellow', 'pink', 'silver', 'gray', 'orange'];\nconst authors = ['red', 'green', 'blue', 'white', 'purple', 'yellow', 'pink', 'silver', 'gray', 'orange'];\n\nconst actionCreator = () => {\n  let aa = Math.floor(Math.random() * 10);\n  return {\n    type: 'UUU',\n    word: words[aa],\n    color: colors[aa],\n    author: authors[aa]\n  };\n};\n\nconst defaultState = {\n  color: 'red',\n  word: ' When it became apparent that he wasn’t going to survive, Tyler’s mom talked to him about death. She comforted him by telling Tyler that she was dying too,',\n  author: 'red'\n};\n\nconst reducer = (state = defaultState, action) => {\n  switch (action.type) {\n    case 'UUU':\n      return {\n        word: action.word,\n        color: action.color,\n        author: action.author\n      };\n\n    default:\n      return state;\n  }\n}; // store\n\n\nvar store = Redux.createStore(reducer); // component\n\nclass Web extends React.Component {\n  constructor(props) {\n    super(props);\n    this.ddd = this.ddd.bind(this);\n  }\n\n  ddd() {\n    setTimeout(() => {\n      this.props.onClick();\n    }, 600);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"quote-box\",\n      className: \"container center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"section\", {\n      style: {\n        backgroundColor: this.props.color,\n        width: '100%',\n        height: 300\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        paddingTop: 20\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"blockquote\", {\n      id: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"\\u201C\", this.props.word, \"\\u201D\"), React.createElement(\"blockquote\", {\n      id: \"author\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"\\u201C\", this.props.author, \"\\u201D\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      id: \"tweet-quote\",\n      href: \"twitter.com/intent/tweet\",\n      style: {\n        marginTop: 120,\n        marginRight: 20\n      },\n      className: \"waves-effect waves-light btn red\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Twitter\"), React.createElement(\"a\", {\n      style: {\n        marginTop: 120,\n        marginRight: 20\n      },\n      className: \"btn waves-effect waves-light yellow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"b\"), React.createElement(\"a\", {\n      id: \"new-quote\",\n      style: {\n        marginTop: 120\n      },\n      className: \"btn waves-effect waves-light green\",\n      onClick: this.ddd,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"NEXT\"))), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"by hutu zhu\"));\n  }\n\n}\n\nconst mapStateToProps = (state = defaultState) => {\n  const data = state;\n  return {\n    word: data.word,\n    color: data.color,\n    author: data.author\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onClick: () => dispatch(actionCreator())\n  };\n};\n\nconst Contain = ReactRedux.connect(mapStateToProps, mapDispatchToProps)(Web);\nvar Provider = ReactRedux.Provider;\nReactDOM.render(React.createElement(Provider, {\n  store: store,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 101\n  },\n  __self: this\n}, React.createElement(Contain, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 102\n  },\n  __self: this\n})), document.getElementById('container'));","map":{"version":3,"sources":["/home/nguyenchicong/Documents/A/happy-team/random-quote-machine/src/App.js"],"names":["words","colors","authors","actionCreator","aa","Math","floor","random","type","word","color","author","defaultState","reducer","state","action","store","Redux","createStore","Web","React","Component","constructor","props","ddd","bind","setTimeout","onClick","render","backgroundColor","width","height","paddingTop","marginTop","marginRight","mapStateToProps","data","mapDispatchToProps","dispatch","Contain","ReactRedux","connect","Provider","ReactDOM","document","getElementById"],"mappings":"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","sourcesContent":["const words = [\n  'In my dual profession as an educator and health care provider, I have worked with numerous children infected with the virus that causes AIDS. ',\n  'The relationships that I have had with these special kids have been gifts in my life. They have taught me so many things, but I have especially learned that',\n  'Tyler was born infected with HIV: his mother was also infected. From the very beginning of his life, he was dependent on medications to enable him to survive. When he was five',\n  'he had a tube surgically inserted in a vein in his chest. This tube was connected to a pump, which he carried in a small backpack on his back. ',\n  ' continuously supplied through this tube to his bloodstream. At times, he also needed supplemented oxygen to support his breathing.',\n  'Tyler wasn’t willing to give up one single moment of his childhood to this deadly disease. It was not unusual to find him playing and racing around his backyard,',\n  'wearing and dragging his tank of oxygen behind him in his little wagon. All of us who knew Tyler marveled at his pure joy in being alive and the energy it gave him.',\n  'That way, when she peered through the window to check on him playing in the yard, she could quickly spot him.',\n  'This dreaded disease eventually wore down even the likes of a little dynamo like Tyler. He grew quite ill and, unfortunately',\n  ' When it became apparent that he wasn’t going to survive, Tyler’s mom talked to him about death. She comforted him by telling Tyler that she was dying too,'\n];\nconst colors=[   \n  'red','green','blue','white','purple','yellow','pink','silver','gray','orange'\n];\nconst authors=[\n  'red','green','blue','white','purple','yellow','pink','silver','gray','orange'\n];\n\n\n\nconst actionCreator = () => {\n  let aa = Math.floor(Math.random()*10);\n  return {\n      type:'UUU',\n      word:words[aa],\n      color:colors[aa],\n      author:authors[aa]\n  }\n};\nconst defaultState = {\n  color:'red',\n  word:' When it became apparent that he wasn’t going to survive, Tyler’s mom talked to him about death. She comforted him by telling Tyler that she was dying too,',\n  author:'red'\n}\nconst reducer = (state = defaultState , action) => {\n  switch (action.type) {\n      case 'UUU':\n          return {\n              word:action.word,\n              color:action.color,\n              author:action.author\n          }\n      default:\n          return state;\n  }\n}\n\n// store\nvar store = Redux.createStore(reducer);\n\n// component\nclass Web extends React.Component{\n  constructor(props) {\n      super(props);\n      this.ddd=this.ddd.bind(this);\n  }\n  ddd(){\n      setTimeout(() => { this.props.onClick(); },600)\n  }\n\n  render(){\n      return(\n          <div id='quote-box' className='container center'>\n              <section style = {{backgroundColor: this.props.color,width:'100%',height:300}}>\n                  <div style={{paddingTop:20}}>\n                  <blockquote id='text'>“{this.props.word}”</blockquote>\n                  <blockquote id='author'>“{this.props.author}”</blockquote>\n                  </div>\n                  <div>\n                  <a id='tweet-quote' href='twitter.com/intent/tweet' style={{marginTop:120,marginRight:20}} className='waves-effect waves-light btn red'>Twitter</a>\n                  <a style={{marginTop:120,marginRight:20}} className='btn waves-effect waves-light yellow'>b</a>\n                  <a id='new-quote' style={{marginTop:120}} className='btn waves-effect waves-light green' onClick={this.ddd}>NEXT</a>\n                  </div>\n              </section>\n              <b>by hutu zhu</b>\n          </div>\n      );\n  }   \n}\n\nconst mapStateToProps = (state = defaultState) => {\n  const data = state;\n  return {\n      word: data.word,\n      color: data.color,\n      author: data.author\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n      onClick: () => dispatch(actionCreator())\n  }\n}\n\nconst Contain = ReactRedux.connect(mapStateToProps,mapDispatchToProps)(Web);\n\nvar Provider = ReactRedux.Provider;\nReactDOM.render(\n<Provider store={store}>\n    <Contain />\n</Provider>,\n  document.getElementById('container')\n);"]},"metadata":{},"sourceType":"module"}