{"ast":null,"code":"var _jsxFileName = \"/home/nguyenchicong/Documents/A/happy-team/random-quote-machine/src/components/RandomQuote.js\";\nimport React, { Component } from 'react'; // import axios from 'axios';\n\nimport { connect } from 'react-redux';\nimport { newQuote } from '../actions';\nimport quotes from '../quotes.json';\n\nclass RandomQuote extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.getNewQuote = () => {\n      this.props.dispatch(newQuote(this.getQuote()));\n    };\n  }\n\n  componentDidMount() {\n    this.props.dispatch(newQuote(this.getQuote()));\n  }\n\n  getQuote() {\n    return quotes[Math.floor(Math.random() * quotes.length)]; // let color = ['red', 'brown', 'Azure', 'orange', 'green', 'Aquamarine', 'pink'] \n    // let colorNum = Math.floor(Math.random() * 7) // get random color    \n    // // console.log(color[colorNum])\n    // this.setState({\n    //     quote: randomQuote['quote'],\n    //     author: randomQuote['author'],\n    //     color: color[colorNum]\n    // })\n  }\n\n  render() {\n    let color = ['red', 'brown', 'Azure', 'orange', 'green', 'Aquamarine', 'pink'];\n    let colorNum = Math.floor(Math.random() * 7); // get random color    \n\n    this.setState({\n      color: color[colorNum]\n    });\n    console.log(this.state.color);\n    return React.createElement(\"div\", {\n      id: \"wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"Random Quote App\"), React.createElement(\"div\", {\n      id: \"quote-box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, this.props.quote.quote)), React.createElement(\"div\", {\n      id: \"author\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"_ \", this.props.quote.author, \" _\")), React.createElement(\"a\", {\n      id: \"tweet-quote\",\n      href: `https://twitter.com/intent/tweet?text=${this.props.quote.quote} ${this.props.quote.author}`,\n      target: \"_blank\",\n      title: \"Post this quote on twitter!\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"tweet-qoute\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \" Twitter\")), React.createElement(\"button\", {\n      id: \"new-quote\",\n      className: \"next-quote\",\n      onClick: this.nextQuote,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"Next Quote\")));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    quote: state.newQuoteReducer\n  };\n};\n\nexport default connect(mapStateToProps)(RandomQuote);","map":{"version":3,"sources":["/home/nguyenchicong/Documents/A/happy-team/random-quote-machine/src/components/RandomQuote.js"],"names":["React","Component","connect","newQuote","quotes","RandomQuote","getNewQuote","props","dispatch","getQuote","componentDidMount","Math","floor","random","length","render","color","colorNum","setState","console","log","state","quote","author","nextQuote","mapStateToProps","newQuoteReducer"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,OAAOC,MAAP,MAAmB,gBAAnB;;AAGA,MAAMC,WAAN,SAA0BJ,SAA1B,CAAoC;AAAA;AAAA;;AAAA,SAehCK,WAfgC,GAelB,MAAM;AAChB,WAAKC,KAAL,CAAWC,QAAX,CAAoBL,QAAQ,CAAC,KAAKM,QAAL,EAAD,CAA5B;AACH,KAjB+B;AAAA;;AAChCC,EAAAA,iBAAiB,GAAG;AAChB,SAAKH,KAAL,CAAWC,QAAX,CAAoBL,QAAQ,CAAC,KAAKM,QAAL,EAAD,CAA5B;AACH;;AACDA,EAAAA,QAAQ,GAAG;AACP,WAAOL,MAAM,CAACO,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBT,MAAM,CAACU,MAAlC,CAAD,CAAb,CADO,CAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH;;AAKDC,EAAAA,MAAM,GAAG;AACJ,QAAIC,KAAK,GAAG,CAAC,KAAD,EAAQ,OAAR,EAAiB,OAAjB,EAA0B,QAA1B,EAAoC,OAApC,EAA6C,YAA7C,EAA2D,MAA3D,CAAZ;AACD,QAAIC,QAAQ,GAAGN,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,CAA3B,CAAf,CAFK,CAEwC;;AAC7C,SAAKK,QAAL,CAAc;AACVF,MAAAA,KAAK,EAACA,KAAK,CAACC,QAAD;AADD,KAAd;AAGAE,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWL,KAAvB;AACA,WACI;AAAK,MAAA,EAAE,EAAC,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,EAGI;AAAK,MAAA,EAAE,EAAC,WAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,EAAE,EAAC,MAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKT,KAAL,CAAWe,KAAX,CAAiBA,KAArB,CAAf,CADJ,EAEI;AAAK,MAAA,EAAE,EAAC,QAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAO,KAAKf,KAAL,CAAWe,KAAX,CAAiBC,MAAxB,OAAjB,CAFJ,EAGI;AAAG,MAAA,EAAE,EAAC,aAAN;AAAoB,MAAA,IAAI,EAAG,yCAAwC,KAAKhB,KAAL,CAAWe,KAAX,CAAiBA,KAAM,IAAG,KAAKf,KAAL,CAAWe,KAAX,CAAiBC,MAAO,EAArH;AAAwH,MAAA,MAAM,EAAC,QAA/H;AAAwI,MAAA,KAAK,EAAC,6BAA9I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,SAAS,EAAC,aAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,CAHJ,EAMI;AAAQ,MAAA,EAAE,EAAC,WAAX;AAAuB,MAAA,SAAS,EAAC,YAAjC;AAA8C,MAAA,OAAO,EAAE,KAAKC,SAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBANJ,CAHJ,CADJ;AAeH;;AAzC+B;;AA2CpC,MAAMC,eAAe,GAAIJ,KAAD,IAAW;AAC/B,SAAO;AACHC,IAAAA,KAAK,EAAED,KAAK,CAACK;AADV,GAAP;AAGH,CAJD;;AAMA,eAAexB,OAAO,CAACuB,eAAD,CAAP,CAAyBpB,WAAzB,CAAf","sourcesContent":["import React, { Component } from 'react'\n// import axios from 'axios';\nimport { connect } from 'react-redux';\nimport { newQuote } from '../actions'\nimport quotes from '../quotes.json'\n\n\nclass RandomQuote extends Component {\n    componentDidMount() {\n        this.props.dispatch(newQuote(this.getQuote()))\n    }\n    getQuote() {\n        return quotes[Math.floor(Math.random() * quotes.length)]\n        // let color = ['red', 'brown', 'Azure', 'orange', 'green', 'Aquamarine', 'pink'] \n        // let colorNum = Math.floor(Math.random() * 7) // get random color    \n        // // console.log(color[colorNum])\n        // this.setState({\n        //     quote: randomQuote['quote'],\n        //     author: randomQuote['author'],\n        //     color: color[colorNum]\n        // })\n    }\n    getNewQuote = () => {\n        this.props.dispatch(newQuote(this.getQuote()))\n    }\n\n    render() {\n         let color = ['red', 'brown', 'Azure', 'orange', 'green', 'Aquamarine', 'pink'] \n        let colorNum = Math.floor(Math.random() * 7) // get random color    \n        this.setState({\n            color:color[colorNum]\n        })\n        console.log(this.state.color)\n        return (\n            <div id='wrapper'>\n                <h1 className='title'>Random Quote App</h1>\n\n                <div id='quote-box'>\n                    <div id='text'><p>{this.props.quote.quote}</p></div>\n                    <div id='author'><h5>_ {this.props.quote.author} _</h5></div>\n                    <a id='tweet-quote' href={`https://twitter.com/intent/tweet?text=${this.props.quote.quote} ${this.props.quote.author}`} target='_blank' title=\"Post this quote on twitter!\">\n                        <button className=\"tweet-qoute\" > Twitter</button>\n                    </a>\n                    <button id='new-quote' className=\"next-quote\" onClick={this.nextQuote}>Next Quote</button>\n\n                </div>\n            </div>\n        )\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n        quote: state.newQuoteReducer\n    }\n}\n\nexport default connect(mapStateToProps)(RandomQuote)\n"]},"metadata":{},"sourceType":"module"}