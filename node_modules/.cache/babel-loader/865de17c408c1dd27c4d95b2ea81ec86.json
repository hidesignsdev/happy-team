{"ast":null,"code":"var _jsxFileName = \"/home/nguyenchicong/Documents/A/happy-team/random-quote-machine/src/components/RandomQuote.js\";\nimport React, { Component } from 'react'; // import axios from 'axios';\n\nimport { connect } from 'react-redux';\nimport { newQuote } from '../actions';\nimport quotes from '../quotes.json';\n\nclass RandomQuote extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.nextQuote = () => {\n      this.props.nextQuote(this.getQuote());\n    };\n  }\n\n  componentDidMount() {\n    this.props.nextQuote(this.getQuote());\n  }\n\n  getQuote() {\n    return quotes[Math.floor(Math.random() * quotes.length)]; // let color = ['red', 'brown', 'Azure', 'orange', 'green', 'Aquamarine', 'pink'] \n    // let colorNum = Math.floor(Math.random() * 7) // get random color    \n    // // console.log(color[colorNum])\n    // this.setState({\n    //     quote: randomQuote['quote'],\n    //     author: randomQuote['author'],\n    //     color: color[colorNum]\n    // })\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"Random Quote App\"), React.createElement(\"div\", {\n      style: {\n        backgroundColor: this.props.quote.color\n      },\n      id: \"quote-box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, this.props.quote.quote)), React.createElement(\"div\", {\n      id: \"author\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"_ \", this.props.quote.author, \" _\")), React.createElement(\"a\", {\n      id: \"tweet-quote\",\n      href: `https://twitter.com/intent/tweet?text=${this.props.quote.quote} ${this.props.quote.author}`,\n      target: \"_blank\",\n      title: \"Post this quote on twitter!\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"tweet-qoute\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \" Twitter\")), React.createElement(\"button\", {\n      id: \"new-quote\",\n      className: \"next-quote\",\n      onClick: this.nextQuote,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"Next Quote\")));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    quote: state.NewQuoteReducder\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    nextQuote: getQuote => {\n      dispatch(newQuote(getQuote));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RandomQuote);","map":{"version":3,"sources":["/home/nguyenchicong/Documents/A/happy-team/random-quote-machine/src/components/RandomQuote.js"],"names":["React","Component","connect","newQuote","quotes","RandomQuote","nextQuote","props","getQuote","componentDidMount","Math","floor","random","length","render","backgroundColor","quote","color","author","mapStateToProps","state","NewQuoteReducder","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,OAAOC,MAAP,MAAmB,gBAAnB;;AAGA,MAAMC,WAAN,SAA0BJ,SAA1B,CAAoC;AAAA;AAAA;;AAAA,SAehCK,SAfgC,GAepB,MAAM;AACd,WAAKC,KAAL,CAAWD,SAAX,CAAqB,KAAKE,QAAL,EAArB;AACH,KAjB+B;AAAA;;AAChCC,EAAAA,iBAAiB,GAAG;AAChB,SAAKF,KAAL,CAAWD,SAAX,CAAqB,KAAKE,QAAL,EAArB;AACH;;AACDA,EAAAA,QAAQ,GAAG;AACP,WAAOJ,MAAM,CAACM,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBR,MAAM,CAACS,MAAlC,CAAD,CAAb,CADO,CAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH;;AAKDC,EAAAA,MAAM,GAAG;AAEL,WACI;AAAK,MAAA,EAAE,EAAC,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,EAGI;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,eAAe,EAAE,KAAKR,KAAL,CAAWS,KAAX,CAAiBC;AAApC,OAAZ;AAAyD,MAAA,EAAE,EAAC,WAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,EAAE,EAAC,MAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKV,KAAL,CAAWS,KAAX,CAAiBA,KAArB,CAAf,CADJ,EAEI;AAAK,MAAA,EAAE,EAAC,QAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAO,KAAKT,KAAL,CAAWS,KAAX,CAAiBE,MAAxB,OAAjB,CAFJ,EAGI;AAAG,MAAA,EAAE,EAAC,aAAN;AAAoB,MAAA,IAAI,EAAG,yCAAwC,KAAKX,KAAL,CAAWS,KAAX,CAAiBA,KAAM,IAAG,KAAKT,KAAL,CAAWS,KAAX,CAAiBE,MAAO,EAArH;AAAwH,MAAA,MAAM,EAAC,QAA/H;AAAwI,MAAA,KAAK,EAAC,6BAA9I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,SAAS,EAAC,aAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,CAHJ,EAMI;AAAQ,MAAA,EAAE,EAAC,WAAX;AAAuB,MAAA,SAAS,EAAC,YAAjC;AAA8C,MAAA,OAAO,EAAE,KAAKZ,SAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBANJ,CAHJ,CADJ;AAeH;;AApC+B;;AAsCpC,MAAMa,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHJ,IAAAA,KAAK,EAAEI,KAAK,CAACC;AADV,GAAP;AAGH,CAJD;;AAKA,MAAMC,kBAAkB,GAAIC,QAAD,IAAY;AACnC,SAAM;AACFjB,IAAAA,SAAS,EAAEE,QAAD,IAAY;AAACe,MAAAA,QAAQ,CAACpB,QAAQ,CAACK,QAAD,CAAT,CAAR;AAA6B;AADlD,GAAN;AAGH,CAJD;;AAMA,eAAeN,OAAO,CAACiB,eAAD,EAAiBG,kBAAjB,CAAP,CAA4CjB,WAA5C,CAAf","sourcesContent":["import React, { Component } from 'react'\n// import axios from 'axios';\nimport { connect } from 'react-redux';\nimport { newQuote } from '../actions'\nimport quotes from '../quotes.json'\n\n\nclass RandomQuote extends Component {\n    componentDidMount() {\n        this.props.nextQuote(this.getQuote())\n    }\n    getQuote() {\n        return quotes[Math.floor(Math.random() * quotes.length)]\n        // let color = ['red', 'brown', 'Azure', 'orange', 'green', 'Aquamarine', 'pink'] \n        // let colorNum = Math.floor(Math.random() * 7) // get random color    \n        // // console.log(color[colorNum])\n        // this.setState({\n        //     quote: randomQuote['quote'],\n        //     author: randomQuote['author'],\n        //     color: color[colorNum]\n        // })\n    }\n    nextQuote = () => {\n        this.props.nextQuote(this.getQuote())\n    }\n\n    render() {\n      \n        return (\n            <div id='wrapper'>\n                <h1 className='title'>Random Quote App</h1>\n\n                <div style={{ backgroundColor: this.props.quote.color }} id='quote-box'>\n                    <div id='text'><p>{this.props.quote.quote}</p></div>\n                    <div id='author'><h5>_ {this.props.quote.author} _</h5></div>\n                    <a id='tweet-quote' href={`https://twitter.com/intent/tweet?text=${this.props.quote.quote} ${this.props.quote.author}`} target='_blank' title=\"Post this quote on twitter!\">\n                        <button className=\"tweet-qoute\" > Twitter</button>\n                    </a>\n                    <button id='new-quote' className=\"next-quote\" onClick={this.nextQuote}>Next Quote</button>\n\n                </div>\n            </div>\n        )\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n        quote: state.NewQuoteReducder\n    }\n}\nconst mapDispatchToProps = (dispatch)=>{\n    return{\n        nextQuote:(getQuote)=>{dispatch(newQuote(getQuote))}\n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(RandomQuote)\n"]},"metadata":{},"sourceType":"module"}