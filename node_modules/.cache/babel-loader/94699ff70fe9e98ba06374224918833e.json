{"ast":null,"code":"var _jsxFileName = \"/home/nguyenchicong/Documents/A/happy-team/random-quote-machine/src/components/RandomQuote.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\n\nclass RandomQuote extends Component {\n  constructor(props) {\n    super(props);\n\n    this.nextQuote = () => {\n      this.getQuote();\n    };\n\n    this.state = {\n      quote: '',\n      authur: '',\n      color: ''\n    };\n  }\n\n  componentDidMount() {\n    this.getQuote();\n  }\n\n  getQuote() {\n    //get data with axios\n    let url = 'https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json';\n    axios.get(url).then(res => {\n      let data = res.data.quotes;\n      let quoteNum = Math.floor(Math.random() * data.length); //get random quote number in data\n\n      let randomQuote = data[quoteNum]; //actual quote\n\n      let color = ['red', 'brown', 'Azure', 'orange', 'green', 'Aquamarine', 'pink'];\n      let colorNum = Math.floor(Math.random() * 7); // get random color    \n      // console.log(color[colorNum])\n\n      this.setState({\n        quote: randomQuote['quote'],\n        author: randomQuote['author'],\n        color: color[colorNum]\n      });\n    });\n  }\n\n  render() {\n    // \n    // const { quote, author, color } = this.state \n    return React.createElement(\"div\", {\n      id: \"wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"Random Quote App\"), React.createElement(\"div\", {\n      style: {\n        backgroundColor: this.state.color\n      },\n      id: \"quote-box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, this.state.quote)), React.createElement(\"div\", {\n      id: \"author\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"_ \", this.state.author, \" _\")), React.createElement(\"a\", {\n      href: `https://twitter.com/intent/tweet?text=${this.state.quote} ${this.state.author}`,\n      target: \"_blank\",\n      title: \"Post this quote on twitter!\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"tweet-qoute\",\n      id: \"tweet-quote\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \" Twitter\")), React.createElement(\"button\", {\n      className: \"next-quote\",\n      onClick: this.nextQuote,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Next Quote\")));\n  }\n\n}\n\nexport default RandomQuote;","map":{"version":3,"sources":["/home/nguyenchicong/Documents/A/happy-team/random-quote-machine/src/components/RandomQuote.js"],"names":["React","Component","axios","RandomQuote","constructor","props","nextQuote","getQuote","state","quote","authur","color","componentDidMount","url","get","then","res","data","quotes","quoteNum","Math","floor","random","length","randomQuote","colorNum","setState","author","render","backgroundColor"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport axios from 'axios';\nclass RandomQuote extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            quote: '',\n            authur: '',\n            color: ''\n        }\n    }\n    componentDidMount() {\n        this.getQuote()\n    }\n   \n    getQuote() {\n         //get data with axios\n        let url = 'https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json'\n        axios.get(url)\n            .then(res => {\n                let data = res.data.quotes\n                let quoteNum = Math.floor(Math.random() * data.length) //get random quote number in data\n                let randomQuote = data[quoteNum] //actual quote\n                let color = ['red', 'brown', 'Azure', 'orange', 'green', 'Aquamarine', 'pink'] \n                let colorNum = Math.floor(Math.random() * 7) // get random color    \n                // console.log(color[colorNum])\n\n                this.setState({\n                    quote: randomQuote['quote'],\n                    author: randomQuote['author'],\n                    color: color[colorNum]\n                })\n\n            })\n    }\n    nextQuote = () => {\n        this.getQuote();\n    }\n\n    render() {\n        // \n        // const { quote, author, color } = this.state \n        return (\n            <div id='wrapper'>\n                <h1 className='title'>Random Quote App</h1>\n               \n                <div style={{ backgroundColor: this.state.color } }  id='quote-box'>\n                    <div  id='text'><p>{this.state.quote}</p></div>\n                    <div  id='author'><h5>_ {this.state.author} _</h5></div>\n                    <a  href={`https://twitter.com/intent/tweet?text=${this.state.quote} ${this.state.author}`} target='_blank' title=\"Post this quote on twitter!\">\n               <button className=\"tweet-qoute\" id='tweet-quote'> Twitter</button>\n                    </a>\n                    <button className=\"next-quote\"  onClick={this.nextQuote}>Next Quote</button>\n                   \n                </div>\n            </div>\n        )\n    }\n}\nexport default RandomQuote\n"]},"metadata":{},"sourceType":"module"}